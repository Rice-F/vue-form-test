{"remainingRequest":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_vue-loader@15.9.0@vue-loader/lib/index.js??vue-loader-options!/Users/sunjing/Documents/test/vue-test/vue-form-test/src/components/FormItem.vue?vue&type=style&index=0&id=08b972b2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/src/components/FormItem.vue","mtime":1583398764000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_css-loader@3.4.2@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_vue-loader@15.9.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunjing/Documents/test/vue-test/vue-form-test/node_modules/_vue-loader@15.9.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNmb3JtLWl0ZW0gewoKfQo="},{"version":3,"sources":["FormItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA","file":"FormItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"form-item\">\n    <label for=\"\">{{label}}</label>\n    <div>\n      <slot></slot>\n      <p v-if=\"errStatus\">{{errMsg}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Schema from 'async-validator'\nexport default {\n  name: 'form-item',\n  inject: ['EForm'],\n  props: ['label', 'prop'],\n  data () {\n    return {\n      errMsg: '',\n      errStatus: false\n    }\n  },\n  mounted () {\n    this.$on('validate', this.validator)\n  },\n  methods: {\n    // 验证规则\n    validator () {\n      // console.log(this)\n      const rules = this.EForm.rules[this.prop]\n      const value = this.EForm.model[this.prop]\n      // 验证的描述对象 验证规则\n      const descriptor = { [this.prop]: rules }\n      const schema = new Schema(descriptor)\n      schema.validate({ [this.prop]: value }, errors => {\n        if (errors) {\n          this.errMsg = errors[0].message\n          this.errStatus = true\n        } else {\n          this.errMsg = ''\n          this.errStatus = false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#form-item {\n\n}\n</style>\n"]}]}